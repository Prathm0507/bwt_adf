{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-bwt-dev"
		},
		"ls_blob_storage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_blob_storage'"
		},
		"ls_services_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_services'"
		},
		"ls_services1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_services1'"
		},
		"ls_source_blob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_source_blob'"
		},
		"ls_source_convert_csv_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_source_convert_csv'"
		},
		"ls_source_csv_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_source_csv'"
		},
		"ls_source_practic_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_source_practic'"
		},
		"ls_source_practice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_source_practice'"
		},
		"ls_source_practice1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_source_practice1'"
		},
		"ls_source_q3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_source_q3'"
		},
		"ls_source_question1st_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_source_question1st'"
		},
		"ls_source_question2nd_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_source_question2nd'"
		},
		"ls_source_question3rd_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_source_question3rd'"
		},
		"ls_source_question4th_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_source_question4th'"
		},
		"ls_services1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://practicesessionazur.dfs.core.windows.net/"
		},
		"ls_web_services_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('http://ergast.com/api/f1/', linkedService().yr,'.json')}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Web_assigment')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://ergast.com/api/f1/seasons.json"
						}
					},
					{
						"name": "act_foreach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Web1').output.MRData.SeasonTable.Seasons",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "act_set_var",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "result",
										"value": {
											"value": "@item().season",
											"type": "Expression"
										}
									}
								},
								{
									"name": "act_copy_data",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "act_set_var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_web_servise",
											"type": "DatasetReference",
											"parameters": {
												"yrsss": {
													"value": "@item().season",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_sevices1",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"result": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ASSIGMENT_SESSION"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_web_servise')]",
				"[concat(variables('factoryId'), '/datasets/ds_sevices1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pi_fail_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_get_metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_source_bloob",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "act_get_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('act_get_metadata').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Append variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "child item",
										"value": {
											"value": "@variables('aappend')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Append variable1",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "aappend",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "act_if_cond",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(pipeline().parameters.file_name,variables('child item'))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "act_fail",
												"type": "Fail",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"message": "file_not_found_issue",
													"errorCode": "101"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "act_set_var",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "value_found",
													"value": "file_found"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"file_name": {
						"type": "string"
					}
				},
				"variables": {
					"value_found": {
						"type": "String"
					},
					"child item": {
						"type": "Array"
					},
					"aappend": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "ASSIGMENT_SESSION"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-24T04:00:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_bloob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_until_equalsto10",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.range_array,'10')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "act_append_var_element",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "element",
										"value": {
											"value": "@int('1')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"range_array": {
						"type": "array",
						"defaultValue": [
							1,
							2,
							3,
							4,
							5,
							6,
							7,
							8,
							9,
							10
						]
					}
				},
				"variables": {
					"element": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "session 1"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-21T09:26:11Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_practice_copy_data",
						"description": "this activity is going to copy data from source to target",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_blob_storage",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_storage_sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "session 1"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-19T13:45:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blob_storage')]",
				"[concat(variables('factoryId'), '/datasets/ds_storage_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_activity_generic')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this pipline is copy data from source to target and we will have parameterization in it.",
				"activities": [
					{
						"name": "act_copy_data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": "2024-03-18T10:00:00Z",
									"modifiedDatetimeEnd": "2024-03-19T08:00:00Z",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_storage_source_generic",
								"type": "DatasetReference",
								"parameters": {
									"container_nm": "adf-practice",
									"directory_nm": "input"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_storage_sink_generic",
								"type": "DatasetReference",
								"parameters": {
									"container_nm": "adf-practice"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"session_nm": {
						"type": "String"
					},
					"session_id": {
						"type": "String"
					},
					"session_deatial": {
						"type": "String"
					}
				},
				"folder": {
					"name": "session 1"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-20T07:36:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_storage_source_generic')]",
				"[concat(variables('factoryId'), '/datasets/ds_storage_sink_generic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_delete_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pl_delete_file_marathi",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_source_question1st",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ASSIGMENT_SESSION"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-23T12:56:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_question1st')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_delete_hollywood')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pl_delete_filename",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_source_question2nd",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": {
									"value": "@pipeline().parameters.file_name",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"file_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ASSIGMENT_SESSION"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-23T12:56:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_question2nd')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_delete_ques4th')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pl_delete_allfile",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_source_question4th",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ASSIGMENT_SESSION"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-23T12:56:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_question4th')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_execute_activity_date')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_set_var_cuurent_dt",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "current_dt1",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_exec_child_pipline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "act_set_var_cuurent_dt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_master_pipline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"date_val": {
									"value": "@variables('current_dt1')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "act_set_var_pipline_return",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_exec_child_pipline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipleine_return",
							"value": {
								"value": "@activity('act_exec_child_pipline').output.pipelineReturnValue.return_date",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"current_dt": {
						"type": "String"
					},
					"current_dt1": {
						"type": "String"
					},
					"pipleine_return": {
						"type": "String"
					}
				},
				"folder": {
					"name": "session 1"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-29T08:53:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_master_pipline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_explore_variable_iteration_condition')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_set_var_session_nm",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "session_nm",
							"value": {
								"value": "BWT ADF SESSION",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_set_var_session_id",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "session_id",
							"value": {
								"value": "1",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_set_var_concat_session",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_set_var_session_nm",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "act_set_var_session_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "session_deatial",
							"value": {
								"value": "@concat(variables('session_id'),' ',variables('session_nm'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"session_nm": {
						"type": "String"
					},
					"session_id": {
						"type": "String"
					},
					"session_deatial": {
						"type": "String"
					}
				},
				"folder": {
					"name": "session 1"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-20T07:36:51Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_fail_activity_R')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_source_question1st",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable4",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Append variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "all_name_store",
										"value": {
											"value": "@variables('append names')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Append variable1",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "append names",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(variables('all_name_store'), 'marath_bollywood.txt')\n",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Fail1",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "file not found ",
										"errorCode": "204"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "true",
										"value": {
											"value": "file found",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"fakse": {
						"type": "String"
					},
					"true": {
						"type": "String"
					},
					"all_name_store": {
						"type": "Array"
					},
					"append names": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "ASSIGMENT_SESSION"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-29T11:39:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_question1st')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_get_metadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_get_matadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_source_getmetadata",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "act_foreach_metadata",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "act_get_matadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('act_get_matadata').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "act_if_cond_check_file_type",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item()['type'],'file')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "act_set_var_each_element",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "test",
													"value": {
														"value": "@item()['name']",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"test": {
						"type": "String"
					}
				},
				"folder": {
					"name": "session 1"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-20T13:24:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_getmetadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_iteration')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_foreach_test",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.lst",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "act_if_cond_check_value",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(string(item()),pipeline().parameters.check_variable)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "act_append_var_list",
												"type": "AppendVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "new_lst",
													"value": {
														"value": "@item()",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "act_set_array_display",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_foreach_test",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "new_test_array",
							"value": {
								"value": "@variables('new_lst')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"lst": {
						"type": "array",
						"defaultValue": [
							1,
							2,
							3,
							4,
							5
						]
					},
					"check_variable": {
						"type": "string"
					}
				},
				"variables": {
					"new_lst": {
						"type": "Array"
					},
					"new_test_array": {
						"type": "Array"
					},
					"session_nm_var": {
						"type": "String"
					},
					"test": {
						"type": "Integer"
					},
					"range_even_number": {
						"type": "Array"
					},
					"element": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "session 1"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-21T09:26:11Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_master_pipline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_set_var_curnt_dt",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "return_date",
									"value": {
										"type": "Expression",
										"content": "@pipeline().parameters.date_val"
									}
								}
							],
							"setSystemVariable": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"date_val": {
						"type": "string"
					}
				},
				"variables": {
					"current_dt1": {
						"type": "String"
					},
					"pipleine_return": {
						"type": "String"
					}
				},
				"folder": {
					"name": "session 1"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-29T08:53:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_practice_session')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_foreach_iterate_range_param",
						"type": "ForEach",
						"state": "Inactive",
						"onInactiveMarkAs": "Skipped",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.range_array",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "act_set_var_each_element",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "test",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "act_filter_even_values",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "act_foreach_iterate_range_param",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.range_array",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(mod(item(), 2), 0)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Append variable1",
						"type": "AppendVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Skipped",
						"dependsOn": [
							{
								"activity": "act_filter_even_values",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "range_even_number",
							"value": {
								"value": "@activity('act_filter_even_values').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_filter_even_values",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "range_even_number",
							"value": {
								"value": "@activity('act_filter_even_values').output.pipelineReturnValue",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"range_array": {
						"type": "array",
						"defaultValue": [
							1,
							2,
							3,
							4,
							5,
							6,
							7,
							8,
							9,
							10
						]
					}
				},
				"variables": {
					"test": {
						"type": "Integer"
					},
					"range_even_number": {
						"type": "Array"
					},
					"element": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "session 1"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-21T09:26:11Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_question3rd')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pl_delete_filename",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_source_question3rd",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": {
									"value": "@{pipeline().parameters.movies}*",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"movies": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ASSIGMENT_SESSION"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-23T12:56:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_question3rd')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_switch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_switch_session",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.session_nm",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "azure",
									"activities": [
										{
											"name": "Set variable1",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "session_nm_var",
												"value": {
													"value": "@pipeline().parameters.session_nm",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "aws",
									"activities": [
										{
											"name": "Set variable1_copy1",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "session_nm_var",
												"value": {
													"value": "@pipeline().parameters.session_nm",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Set variable1_copy2",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "session_nm_var",
										"value": {
											"value": "@pipeline().parameters.session_nm",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"session_nm": {
						"type": "string"
					}
				},
				"variables": {
					"session_nm_var": {
						"type": "String"
					}
				},
				"folder": {
					"name": "session 1"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-20T10:40:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_until_assignment')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(variables('range'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "skip_range",
										"value": {
											"value": "@skip(variables('range'),1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "range",
										"value": {
											"value": "@variables('skip_range')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"range": {
						"type": "Array",
						"defaultValue": [
							1,
							2,
							3,
							4,
							5,
							6,
							7,
							8,
							9,
							10
						]
					},
					"skip_range": {
						"type": "Array"
					},
					"range_output": {
						"type": "Array"
					},
					"output_range": {
						"type": "Array"
					},
					"numbers": {
						"type": "Array"
					},
					"finalarr": {
						"type": "Array"
					},
					"result": {
						"type": "String"
					},
					"finalresult": {
						"type": "Array"
					},
					"arr": {
						"type": "Array"
					},
					"new_range": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "ASSIGMENT_SESSION"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-23T13:03:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blob_storage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "abc.txt.txt",
						"folderPath": "input",
						"container": "adf-practice"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sevices1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_services1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "files",
						"fileSystem": "input"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_services1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_bloob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_source_blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "movies/bollywood",
						"container": "input"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_source_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_getmetadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "adf-practice"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_question1st')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_source_question1st",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "movies/bollywood",
						"container": "input"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_source_question1st')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_question2nd')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_source_question2nd",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "movies/hollywood",
						"container": "input"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_source_question2nd')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_question3rd')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_source_question3rd",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "movies/hollywood",
						"container": "input"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_source_question3rd')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_question4th')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_source_question4th",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "movies",
						"container": "input"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_source_question4th')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_storage_csv_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container_nm": {
						"type": "String",
						"defaultValue": "adf-practice"
					},
					"directory_nm": {
						"type": "String"
					},
					"file_nm": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_nm",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory_nm",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container_nm",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_storage_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "abc.txt",
						"folderPath": "output",
						"container": "adf-practice"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_storage_sink_generic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container_nm": {
						"type": "String",
						"defaultValue": "adf-practice"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().container_nm",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_storage_sink_genric')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sink_directory_nm": {
						"type": "String"
					},
					"file_delimeter": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().sink_directory_nm",
							"type": "Expression"
						},
						"container": "adf-practice"
					},
					"columnDelimiter": {
						"value": "@dataset().file_delimeter",
						"type": "Expression"
					},
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EID",
						"type": "String"
					},
					{
						"name": "ENAME",
						"type": "String"
					},
					{
						"name": "EJOB",
						"type": "String"
					},
					{
						"name": "EADD",
						"type": "String"
					},
					{
						"name": "ECONTACT",
						"type": "String"
					},
					{
						"name": "ESAL",
						"type": "String"
					},
					{
						"name": "EDOJ",
						"type": "String"
					},
					{
						"name": "EDOL",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_storage_source_generic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container_nm": {
						"type": "String",
						"defaultValue": "adf-practice"
					},
					"directory_nm": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().directory_nm",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container_nm",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_web_servise')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_web_services",
					"type": "LinkedServiceReference",
					"parameters": {
						"yr": {
							"value": "@dataset().yrsss",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"yrsss": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_web_services')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_blob_storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this linked service is used connecting to the blob storage account",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_blob_storage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_services')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_services_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_services1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_services1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_services1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_source_blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_source_blob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_source_convert_csv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_source_convert_csv_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_source_csv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_source_csv_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_source_practic')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_source_practic_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_source_practice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_source_practice_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_source_practice1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_source_practice1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_source_q3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_source_q3_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_source_question1st')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_source_question1st_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_source_question2nd')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_source_question2nd_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_source_question3rd')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_source_question3rd_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_source_question4th')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_source_question4th_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_web_services')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"yr": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ls_web_services_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_test')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_execute_activity_date",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 2,
						"startTime": "2024-03-29T09:09:00",
						"endTime": "2024-03-30T09:09:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_execute_activity_date')]"
			]
		}
	]
}